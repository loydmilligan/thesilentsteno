# Silent Steno PipeWire-Pulse Configuration
# Provides PulseAudio compatibility layer for existing applications

# Global properties
context.properties = {
    # Module settings
    log.level = 2
    
    # Default audio settings to match our PulseAudio config
    pulse.default.format = S16LE
    pulse.default.rate = 44100
    pulse.default.channels = 2
    pulse.default.position = [ FL FR ]
    
    # Latency settings
    pulse.min.req = 512/44100
    pulse.default.req = 512/44100
    pulse.min.quantum = 512/44100
    pulse.max.quantum = 2048/44100
    
    # Fragment settings matching our PulseAudio config
    pulse.min.frag = 512/44100
    pulse.default.frag = 1024/44100
    pulse.default.tlength = 2048/44100
    
    # Server info
    server.address = [ "unix:native" ]
    pulse.server.name = "PulseAudio (on PipeWire)"
}

# Modules
context.modules = [
    # Native protocol
    {   name = libpipewire-module-protocol-native }
    
    # The native pulse protocol
    {   name = libpipewire-module-protocol-pulse
        args = {
            # Low latency operation
            pulse.min.req = 256/44100
            pulse.default.req = 512/44100
            pulse.max.req = 1024/44100
            
            pulse.min.quantum = 256/44100
            pulse.max.quantum = 2048/44100
            
            # Server properties
            server.address = [ "unix:native" ]
            
            # Compatibility properties
            pulse.fix.format = S16LE
            pulse.fix.rate = 44100
            pulse.fix.channels = 2
            pulse.fix.position = [ FL FR ]
        }
    }
    
    # Adapter for creating nodes
    {   name = libpipewire-module-client-node }
    
    # Adapter for creating devices
    {   name = libpipewire-module-client-device }
    
    # Makes a factory for wrapping clients in an adapter
    {   name = libpipewire-module-adapter }
    
    # Metadata support
    {   name = libpipewire-module-metadata }
    
    # Session manager
    {   name = libpipewire-module-session-manager }
]

# Pulse properties
pulse.properties = {
    # Application environment
    pulse.auto-connect = true
    pulse.peak-detect = false
    
    # Compatibility settings
    pulse.cmd = [
        { cmd = "load-module" res = "module-always-sink" }
        { cmd = "load-module" res = "module-native-protocol-tcp" }
        { cmd = "load-module" res = "module-rescue-streams" }
        { cmd = "load-module" res = "module-switch-on-port-available" }
        { cmd = "load-module" res = "module-switch-on-connect" }
    ]
}

# Stream properties
stream.properties = {
    # Match our PulseAudio latency targets
    node.latency = 512/44100
    resample.quality = 4
    resample.disable = false
    channelmix.normalize = true
    channelmix.mix-lfe = true
    channelmix.upmix = true
    channelmix.lfe-cutoff = 150
}

# Context objects to create
context.objects = [
    # Create a dummy sink for compatibility
    {   factory = adapter
        args = {
            factory.name = support.null-audio-sink
            node.name = "Silent-Steno-Dummy"
            media.class = "Audio/Sink"
            audio.position = "FL,FR"
            node.description = "Silent Steno Dummy Output"
            adapter.auto-port-config = {
                mode = dsp
                monitor = false
                control = false
                position = preserve
            }
        }
    }
]

# Default rules
pulse.rules = [
    # Bluetooth audio rules matching our PulseAudio config
    {
        matches = [
            { application.process.binary = "~.*bluetooth.*" }
            { application.name = "~.*[Bb]luetooth.*" }
        ]
        actions = {
            update-props = {
                pulse.min.quantum = 256/44100
                pulse.max.quantum = 1024/44100
                node.latency = 512/44100
            }
            quirks = [ remove-capture-dont-move ]
        }
    },
    
    # Audio forwarding rules
    {
        matches = [
            { media.role = "phone" }
        ]
        actions = {
            update-props = {
                priority.session = 1100
                priority.driver = 1100
            }
        }
    },
    
    # Low latency applications
    {
        matches = [
            { application.name = "~.*[Ss]ilent.*[Ss]teno.*" }
            { node.name = "~.*[Ss]ilent.*[Ss]teno.*" }
        ]
        actions = {
            update-props = {
                pulse.min.quantum = 256/44100
                node.latency = 256/44100
                node.rate = 1/44100
                node.autoconnect = true
            }
        }
    }
]