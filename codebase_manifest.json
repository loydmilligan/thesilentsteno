{
  "version": "1.0",
  "generated": "2025-07-14T08:30:00Z",
  "project": {
    "name": "thesilentsteno",
    "description": "Bluetooth AI Meeting Recorder - A Raspberry Pi 5 device that acts as an invisible audio intermediary for AI-powered transcription and analysis",
    "version": "0.1.0",
    "tech_stack": "Python, Raspberry Pi 5, BlueZ Bluetooth, Whisper AI, Local LLM (Phi-3 Mini), SQLite, Touch UI",
    "deployment": "Raspberry Pi 5 with 3.5-5 inch touchscreen, wall-powered device",
    "repository": "local development repository"
  },
  "documentation": {
    "mvp": "docs/mvp.md",
    "prd": "docs/prd.md",
    "task_list": "tasks/task_list.md",
    "proposed_final_manifest": "docs/proposed_final_manifest.json",
    "manifest_evolution": "docs/manifest_evolution.md",
    "architecture_notes": "Bluetooth audio proxy with dual A2DP connections, real-time audio pipeline with <40ms latency, local AI processing chain"
  },
  "files": {
    "scripts/setup_hardware.sh": {
      "purpose": "Hardware setup automation script",
      "type": "bash_script",
      "exports": ["install_dev_tools", "configure_autoboot", "test_hardware", "check_system_status"],
      "description": "Automates Pi 5 hardware configuration and development tool installation"
    },
    "config/display_config.txt": {
      "purpose": "Display configuration parameters",
      "type": "config",
      "exports": ["display settings"],
      "description": "Touchscreen display configuration and calibration settings"
    },
    "scripts/autostart.sh": {
      "purpose": "Application auto-start script",
      "type": "bash_script", 
      "exports": ["startup configuration"],
      "description": "Configures system to auto-boot to main application"
    },
    "docs/hardware_setup.md": {
      "purpose": "Hardware setup documentation",
      "type": "documentation",
      "exports": ["setup instructions"],
      "description": "Complete hardware setup and troubleshooting guide"
    },
    "src/bluetooth/bluez_manager.py": {
      "purpose": "BlueZ Bluetooth stack management",
      "type": "python_module",
      "exports": ["BlueZManager", "start_bluetooth", "stop_bluetooth", "get_bluetooth_status"],
      "description": "Python interface for controlling BlueZ Bluetooth stack with A2DP support"
    },
    "config/bluetooth_main.conf": {
      "purpose": "BlueZ main configuration template",
      "type": "config",
      "exports": ["bluetooth configuration"],
      "description": "BlueZ main.conf configuration template for dual A2DP connections"
    },
    "config/bluetooth_audio.conf": {
      "purpose": "BlueZ audio configuration template",
      "type": "config", 
      "exports": ["audio configuration"],
      "description": "BlueZ audio.conf configuration for high-quality codec support"
    },
    "scripts/bluetooth_service.sh": {
      "purpose": "Bluetooth service management script",
      "type": "bash_script",
      "exports": ["start_bluetooth_service", "stop_bluetooth_service", "restart_bluetooth_service"],
      "description": "Service management script for Bluetooth with automatic reconnection"
    },
    "src/bluetooth/connection_manager.py": {
      "purpose": "Bluetooth connection management",
      "type": "python_module",
      "exports": ["ConnectionManager", "pair_device", "connect_device", "manage_connections"],
      "description": "Manages Bluetooth device pairing, connection persistence, and auto-reconnection"
    },
    "src/__init__.py": {
      "purpose": "Main source package initializer",
      "type": "python_module",
      "exports": ["package structure"],
      "description": "Python package initialization for src module"
    },
    "src/bluetooth/__init__.py": {
      "purpose": "Bluetooth module initializer",
      "type": "python_module",
      "exports": ["BlueZManager", "ConnectionManager", "DeviceRole", "start_bluetooth", "stop_bluetooth", "get_bluetooth_status", "pair_device", "connect_device", "manage_connections"],
      "description": "Bluetooth module initialization with comprehensive API exports"
    }
  },
  "dependencies": {
    "system": [
      "Raspberry Pi OS",
      "BlueZ Bluetooth stack",
      "ALSA/PulseAudio audio system",
      "Python 3.8+",
      "python3-dev",
      "build-essential",
      "git",
      "vim",
      "bluez",
      "bluez-tools",
      "pulseaudio-module-bluetooth",
      "python3-dbus"
    ],
    "python": [
      "whisper (for speech-to-text)",
      "transformers (for local LLM)",
      "torch (for AI model inference)",
      "sqlite3 (for data storage)",
      "bluetooth libraries",
      "audio processing libraries",
      "dbus-python (for BlueZ communication)",
      "pybluez (for Bluetooth operations)"
    ],
    "audio_codecs": [
      "SBC", "AAC", "aptX", "Samsung Scalable"
    ]
  },
  "architecture": {
    "main_flow": "Phone → Bluetooth A2DP → Pi 5 Audio Capture → Audio Forwarding → Headphones + Real-time AI Processing",
    "data_flow": "Live Audio → Voice Activity Detection → Whisper Transcription → LLM Analysis → Local Storage → Export Options",
    "configuration": "Touch UI for device settings, Bluetooth pairing, AI model configuration, storage management",
    "key_components": [
      "Bluetooth Audio Proxy (dual A2DP connections)",
      "Real-time Audio Pipeline (<40ms latency)",
      "Local Whisper Transcription Engine",
      "Local LLM Analysis (Phi-3 Mini)",
      "Touch UI System",
      "SQLite Data Management",
      "Export and Sharing System"
    ],
    "integration_points": [
      "BlueZ Bluetooth stack",
      "ALSA/PulseAudio audio system",
      "Whisper AI model",
      "Local LLM inference",
      "Touch display interface",
      "File system and storage"
    ],
    "hardware_setup": {
      "platform_configured": true,
      "development_tools_installed": true,
      "auto_boot_configured": true,
      "hardware_tested": true
    },
    "bluetooth_setup": {
      "bluez_configured": true,
      "a2dp_sink_enabled": true,
      "a2dp_source_enabled": true,
      "codec_support": ["SBC", "AAC", "aptX", "Samsung Scalable"],
      "dual_connections": true,
      "auto_reconnect": true
    }
  },
  "development": {
    "approach": "manifest-driven development with git workflow integration",
    "workflow": "process_task -> implement_task -> check_task -> resolve_mismatch (if needed) -> commit_task",
    "task_status": "Task-1.2 completed - Bluetooth stack configured",
    "current_phase": "Phase 1: Foundation & Hardware Setup - Task 1.2 complete",
    "manifest_evolution": "tracked in docs/manifest_evolution.md",
    "version_control": "git commits tied to task completion with detailed commit messages"
  },
  "performance_targets": {
    "audio_latency": "<40ms end-to-end",
    "transcription_lag": "<3 seconds behind live audio",
    "session_start_time": "<10 seconds from tap to active",
    "transcription_accuracy": ">90% for clear speech",
    "session_reliability": ">99% completion rate",
    "storage_capacity": "32GB+ SD card supporting 20+ hours of meetings"
  },
  "hardware_requirements": {
    "platform": "Raspberry Pi 5 (4GB+ RAM recommended)",
    "display": "3.5-5 inch touchscreen (480x320 or 800x480)",
    "audio": "Built-in audio + optional USB audio interface",
    "connectivity": "Built-in WiFi and Bluetooth 5.0",
    "power": "Wall adapter (no battery requirement)",
    "enclosure": "3D printable case with screen cutout"
  }
}